//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.5
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\dev\murmur\MurMur\MurMur\Grammar\MurMurParser.g4 by ANTLR 4.6.5

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MurMur.Grammar {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="MurMurParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.5")]
[System.CLSCompliant(false)]
public interface IMurMurParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>stringExpression</c>
	/// labeled alternative in <see cref="MurMurParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringExpression([NotNull] MurMurParser.StringExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stringExpression</c>
	/// labeled alternative in <see cref="MurMurParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringExpression([NotNull] MurMurParser.StringExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>methodOrVariableExpression</c>
	/// labeled alternative in <see cref="MurMurParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodOrVariableExpression([NotNull] MurMurParser.MethodOrVariableExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>methodOrVariableExpression</c>
	/// labeled alternative in <see cref="MurMurParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodOrVariableExpression([NotNull] MurMurParser.MethodOrVariableExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>additiveExpression</c>
	/// labeled alternative in <see cref="MurMurParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditiveExpression([NotNull] MurMurParser.AdditiveExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>additiveExpression</c>
	/// labeled alternative in <see cref="MurMurParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditiveExpression([NotNull] MurMurParser.AdditiveExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>numberExpression</c>
	/// labeled alternative in <see cref="MurMurParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberExpression([NotNull] MurMurParser.NumberExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numberExpression</c>
	/// labeled alternative in <see cref="MurMurParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberExpression([NotNull] MurMurParser.NumberExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>assignExpression</c>
	/// labeled alternative in <see cref="MurMurParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignExpression([NotNull] MurMurParser.AssignExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignExpression</c>
	/// labeled alternative in <see cref="MurMurParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignExpression([NotNull] MurMurParser.AssignExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>comparissonExpression</c>
	/// labeled alternative in <see cref="MurMurParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparissonExpression([NotNull] MurMurParser.ComparissonExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>comparissonExpression</c>
	/// labeled alternative in <see cref="MurMurParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparissonExpression([NotNull] MurMurParser.ComparissonExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>methodExpression</c>
	/// labeled alternative in <see cref="MurMurParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodExpression([NotNull] MurMurParser.MethodExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>methodExpression</c>
	/// labeled alternative in <see cref="MurMurParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodExpression([NotNull] MurMurParser.MethodExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>priorityExpression</c>
	/// labeled alternative in <see cref="MurMurParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPriorityExpression([NotNull] MurMurParser.PriorityExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>priorityExpression</c>
	/// labeled alternative in <see cref="MurMurParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPriorityExpression([NotNull] MurMurParser.PriorityExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>multiplicationExpression</c>
	/// labeled alternative in <see cref="MurMurParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicationExpression([NotNull] MurMurParser.MultiplicationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>multiplicationExpression</c>
	/// labeled alternative in <see cref="MurMurParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicationExpression([NotNull] MurMurParser.MultiplicationExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>booleanExpression</c>
	/// labeled alternative in <see cref="MurMurParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanExpression([NotNull] MurMurParser.BooleanExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>booleanExpression</c>
	/// labeled alternative in <see cref="MurMurParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanExpression([NotNull] MurMurParser.BooleanExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.murmur"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMurmur([NotNull] MurMurParser.MurmurContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.murmur"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMurmur([NotNull] MurMurParser.MurmurContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.initBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitBlock([NotNull] MurMurParser.InitBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.initBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitBlock([NotNull] MurMurParser.InitBlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.tag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTag([NotNull] MurMurParser.TagContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.tag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTag([NotNull] MurMurParser.TagContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] MurMurParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] MurMurParser.BlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.pickBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPickBlock([NotNull] MurMurParser.PickBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.pickBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPickBlock([NotNull] MurMurParser.PickBlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.menuBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMenuBlock([NotNull] MurMurParser.MenuBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.menuBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMenuBlock([NotNull] MurMurParser.MenuBlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.ifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfBlock([NotNull] MurMurParser.IfBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.ifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfBlock([NotNull] MurMurParser.IfBlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLine([NotNull] MurMurParser.LineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLine([NotNull] MurMurParser.LineContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.lineFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLineFragment([NotNull] MurMurParser.LineFragmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.lineFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLineFragment([NotNull] MurMurParser.LineFragmentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.inlineIfBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInlineIfBlock([NotNull] MurMurParser.InlineIfBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.inlineIfBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInlineIfBlock([NotNull] MurMurParser.InlineIfBlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.inlineIfTrueFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInlineIfTrueFragment([NotNull] MurMurParser.InlineIfTrueFragmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.inlineIfTrueFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInlineIfTrueFragment([NotNull] MurMurParser.InlineIfTrueFragmentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.inlineIfFalseFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInlineIfFalseFragment([NotNull] MurMurParser.InlineIfFalseFragmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.inlineIfFalseFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInlineIfFalseFragment([NotNull] MurMurParser.InlineIfFalseFragmentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.menuSubBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMenuSubBlock([NotNull] MurMurParser.MenuSubBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.menuSubBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMenuSubBlock([NotNull] MurMurParser.MenuSubBlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.pickThisBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPickThisBlock([NotNull] MurMurParser.PickThisBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.pickThisBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPickThisBlock([NotNull] MurMurParser.PickThisBlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.simpleCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleCommand([NotNull] MurMurParser.SimpleCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.simpleCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleCommand([NotNull] MurMurParser.SimpleCommandContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.multiLineCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiLineCommand([NotNull] MurMurParser.MultiLineCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.multiLineCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiLineCommand([NotNull] MurMurParser.MultiLineCommandContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString([NotNull] MurMurParser.StringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString([NotNull] MurMurParser.StringContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] MurMurParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] MurMurParser.ExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParams([NotNull] MurMurParser.ParamsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParams([NotNull] MurMurParser.ParamsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.pickCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPickCommand([NotNull] MurMurParser.PickCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.pickCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPickCommand([NotNull] MurMurParser.PickCommandContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.pickThisCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPickThisCommand([NotNull] MurMurParser.PickThisCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.pickThisCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPickThisCommand([NotNull] MurMurParser.PickThisCommandContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.menuCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMenuCommand([NotNull] MurMurParser.MenuCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.menuCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMenuCommand([NotNull] MurMurParser.MenuCommandContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.menuOptionCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMenuOptionCommand([NotNull] MurMurParser.MenuOptionCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.menuOptionCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMenuOptionCommand([NotNull] MurMurParser.MenuOptionCommandContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.ifCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfCommand([NotNull] MurMurParser.IfCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.ifCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfCommand([NotNull] MurMurParser.IfCommandContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.elseCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseCommand([NotNull] MurMurParser.ElseCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.elseCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseCommand([NotNull] MurMurParser.ElseCommandContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.endCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEndCommand([NotNull] MurMurParser.EndCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.endCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEndCommand([NotNull] MurMurParser.EndCommandContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MurMurParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration([NotNull] MurMurParser.DeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MurMurParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration([NotNull] MurMurParser.DeclarationContext context);
}
} // namespace MurMur.Grammar
