//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.5
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\dev\murmur\MurMur\MurMur\Grammar\MurMurLexer.g4 by ANTLR 4.6.5

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MurMur.Grammar {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.5")]
[System.CLSCompliant(false)]
public partial class MurMurLexer : Lexer {
	public const int
		WHITESPACE=1, NEWLINE=2, LINE_COMMENT=3, COMMENT=4, TAG_START=5, COMMAND_START=6, 
		INCLUDE_KEYWORD=7, INIT_KEYWORD=8, TEXT=9, NEW_TAG=10, NEW_DECLARATION=11, 
		COMMAND_NEWLINE=12, COMMAND_LINE_COMMENT=13, COMMAND_COMMENT=14, COMMAND_IGNORE=15, 
		COMMAND_PARAMS_START=16, COMMAND_STRING_START=17, OPEN_PAREN=18, CLOSE_PAREN=19, 
		COMMAND_PARAMS_SEPARATOR=20, COMMAND_END=21, KEYWORD_IF=22, KEYWORD_ELSE=23, 
		KEYWORD_END=24, KEYWORD_GOTO=25, KEYWORD_MENU=26, KEYWORD_MENU_OPTION=27, 
		KEYWORD_PICK=28, KEYWORD_PICK_THIS=29, TRUE=30, FALSE=31, NUMBER=32, WORD=33, 
		ASSIGN_SIGNAL=34, COMPARISSON_SIGNAL=35, MUL_DIV_SIGNAL=36, ADD_SUB_SIGNAL=37, 
		STRING=38, COMMAND_STRING_END=39;
	public const int INSIDE_COMMAND = 1;
	public const int STRING_MODE = 2;
	public static string[] modeNames = {
		"DEFAULT_MODE", "INSIDE_COMMAND", "STRING_MODE"
	};

	public static readonly string[] ruleNames = {
		"LOWERCASE", "UPPERCASE", "DIGIT", "TAG", "NL", "WHITESPACE", "NEWLINE", 
		"LINE_COMMENT", "COMMENT", "TAG_START", "COMMAND_START", "INCLUDE_KEYWORD", 
		"INIT_KEYWORD", "TEXT", "NEW_TAG", "NEW_DECLARATION", "COMMAND_NEWLINE", 
		"COMMAND_LINE_COMMENT", "COMMAND_COMMENT", "COMMAND_IGNORE", "COMMAND_PARAMS_START", 
		"COMMAND_STRING_START", "OPEN_PAREN", "CLOSE_PAREN", "COMMAND_PARAMS_SEPARATOR", 
		"COMMAND_END", "T", "R", "U", "E", "F", "A", "L", "S", "KEYWORD_IF", "KEYWORD_ELSE", 
		"KEYWORD_END", "KEYWORD_GOTO", "KEYWORD_MENU", "KEYWORD_MENU_OPTION", 
		"KEYWORD_PICK", "KEYWORD_PICK_THIS", "TRUE", "FALSE", "NUMBER", "WORD", 
		"ASSIGN_SIGNAL", "COMPARISSON_SIGNAL", "MUL_DIV_SIGNAL", "ADD_SUB_SIGNAL", 
		"STRING", "COMMAND_STRING_END"
	};


	public MurMurLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, "'@include'", "'@init'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "WHITESPACE", "NEWLINE", "LINE_COMMENT", "COMMENT", "TAG_START", 
		"COMMAND_START", "INCLUDE_KEYWORD", "INIT_KEYWORD", "TEXT", "NEW_TAG", 
		"NEW_DECLARATION", "COMMAND_NEWLINE", "COMMAND_LINE_COMMENT", "COMMAND_COMMENT", 
		"COMMAND_IGNORE", "COMMAND_PARAMS_START", "COMMAND_STRING_START", "OPEN_PAREN", 
		"CLOSE_PAREN", "COMMAND_PARAMS_SEPARATOR", "COMMAND_END", "KEYWORD_IF", 
		"KEYWORD_ELSE", "KEYWORD_END", "KEYWORD_GOTO", "KEYWORD_MENU", "KEYWORD_MENU_OPTION", 
		"KEYWORD_PICK", "KEYWORD_PICK_THIS", "TRUE", "FALSE", "NUMBER", "WORD", 
		"ASSIGN_SIGNAL", "COMPARISSON_SIGNAL", "MUL_DIV_SIGNAL", "ADD_SUB_SIGNAL", 
		"STRING", "COMMAND_STRING_END"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "MurMurLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public override bool Sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 14 : return NEW_TAG_sempred(_localctx, predIndex);

		case 15 : return NEW_DECLARATION_sempred(_localctx, predIndex);

		case 48 : return MUL_DIV_SIGNAL_sempred(_localctx, predIndex);
		}
		return true;
	}
	private bool NEW_TAG_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0: return _input.La(1)=='#';
		}
		return true;
	}
	private bool NEW_DECLARATION_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 1: return _input.La(1)=='@';
		}
		return true;
	}
	private bool MUL_DIV_SIGNAL_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 2: return _input.La(1)!='*';

		case 3: return _input.La(1)!='/';
		}
		return true;
	}

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2)\x173\b\x1\b\x1"+
		"\b\x1\x4\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a"+
		"\x4\b\t\b\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF"+
		"\t\xF\x4\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14"+
		"\x4\x15\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A"+
		"\t\x1A\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F"+
		"\x4 \t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4"+
		")\t)\x4*\t*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x4\x31\t\x31"+
		"\x4\x32\t\x32\x4\x33\t\x33\x4\x34\t\x34\x4\x35\t\x35\x3\x2\x3\x2\x3\x3"+
		"\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x5\x6y\n\x6\x3\a\x6\a"+
		"|\n\a\r\a\xE\a}\x3\a\x3\a\x3\b\x6\b\x83\n\b\r\b\xE\b\x84\x3\t\x3\t\x3"+
		"\t\x3\t\a\t\x8B\n\t\f\t\xE\t\x8E\v\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\a\n"+
		"\x96\n\n\f\n\xE\n\x99\v\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f"+
		"\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\xE"+
		"\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x6\xF\xBC"+
		"\n\xF\r\xF\xE\xF\xBD\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11"+
		"\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x13\a\x13"+
		"\xD0\n\x13\f\x13\xE\x13\xD3\v\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3"+
		"\x14\a\x14\xDB\n\x14\f\x14\xE\x14\xDE\v\x14\x3\x14\x3\x14\x3\x14\x3\x14"+
		"\x3\x14\x3\x15\x6\x15\xE6\n\x15\r\x15\xE\x15\xE7\x3\x15\x3\x15\x3\x16"+
		"\x3\x16\x3\x17\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A"+
		"\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1E"+
		"\x3\x1E\x3\x1F\x3\x1F\x3 \x3 \x3!\x3!\x3\"\x3\"\x3#\x3#\x3$\x3$\x3$\x3"+
		"%\x3%\x3%\x3%\x3%\x3&\x3&\x3&\x3&\x3\'\x3\'\x3\'\x3(\x3(\x3(\x3(\x3(\x3"+
		")\x3)\x3)\x3)\x3)\x3)\x3)\x3*\x3*\x3*\x3*\x3*\x3+\x3+\x3+\x3+\x3+\x3,"+
		"\x3,\x3,\x3,\x3,\x3-\x3-\x3-\x3-\x3-\x3-\x3.\x6.\x13D\n.\r.\xE.\x13E\x3"+
		".\x3.\x6.\x143\n.\r.\xE.\x144\x5.\x147\n.\x3/\x3/\x3/\x5/\x14C\n/\x3/"+
		"\x3/\x3/\x3/\x6/\x152\n/\r/\xE/\x153\x3\x30\x3\x30\x3\x31\x3\x31\x3\x31"+
		"\x3\x31\x3\x31\x3\x31\x3\x31\x3\x31\x3\x31\x5\x31\x161\n\x31\x3\x32\x3"+
		"\x32\x3\x32\x3\x32\x5\x32\x167\n\x32\x3\x33\x3\x33\x3\x34\x6\x34\x16C"+
		"\n\x34\r\x34\xE\x34\x16D\x3\x35\x3\x35\x3\x35\x3\x35\x4\x97\xDC\x2\x2"+
		"\x36\x5\x2\x2\a\x2\x2\t\x2\x2\v\x2\x2\r\x2\x2\xF\x2\x3\x11\x2\x4\x13\x2"+
		"\x5\x15\x2\x6\x17\x2\a\x19\x2\b\x1B\x2\t\x1D\x2\n\x1F\x2\v!\x2\f#\x2\r"+
		"%\x2\xE\'\x2\xF)\x2\x10+\x2\x11-\x2\x12/\x2\x13\x31\x2\x14\x33\x2\x15"+
		"\x35\x2\x16\x37\x2\x17\x39\x2\x2;\x2\x2=\x2\x2?\x2\x2\x41\x2\x2\x43\x2"+
		"\x2\x45\x2\x2G\x2\x2I\x2\x18K\x2\x19M\x2\x1AO\x2\x1BQ\x2\x1CS\x2\x1DU"+
		"\x2\x1EW\x2\x1FY\x2 [\x2!]\x2\"_\x2#\x61\x2$\x63\x2%\x65\x2&g\x2\'i\x2"+
		"(k\x2)\x5\x2\x3\x4\x15\x3\x2\x63|\x3\x2\x43\\\x3\x2\x32;\x4\x2\f\f\xF"+
		"\xF\x4\x2\v\v\"\"\t\x2\f\f\xF\xF%%\x31\x31\x42\x42]]}}\x4\x2,,\x31\x31"+
		"\x4\x2VVvv\x4\x2TTtt\x4\x2WWww\x4\x2GGgg\x4\x2HHhh\x4\x2\x43\x43\x63\x63"+
		"\x4\x2NNnn\x4\x2UUuu\x3\x2\x30\x30\x4\x2>>@@\x4\x2--//\x3\x2__\x17C\x2"+
		"\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2"+
		"\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3"+
		"\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x3!\x3\x2\x2\x2\x3#\x3\x2\x2\x2\x3%\x3\x2"+
		"\x2\x2\x3\'\x3\x2\x2\x2\x3)\x3\x2\x2\x2\x3+\x3\x2\x2\x2\x3-\x3\x2\x2\x2"+
		"\x3/\x3\x2\x2\x2\x3\x31\x3\x2\x2\x2\x3\x33\x3\x2\x2\x2\x3\x35\x3\x2\x2"+
		"\x2\x3\x37\x3\x2\x2\x2\x3I\x3\x2\x2\x2\x3K\x3\x2\x2\x2\x3M\x3\x2\x2\x2"+
		"\x3O\x3\x2\x2\x2\x3Q\x3\x2\x2\x2\x3S\x3\x2\x2\x2\x3U\x3\x2\x2\x2\x3W\x3"+
		"\x2\x2\x2\x3Y\x3\x2\x2\x2\x3[\x3\x2\x2\x2\x3]\x3\x2\x2\x2\x3_\x3\x2\x2"+
		"\x2\x3\x61\x3\x2\x2\x2\x3\x63\x3\x2\x2\x2\x3\x65\x3\x2\x2\x2\x3g\x3\x2"+
		"\x2\x2\x4i\x3\x2\x2\x2\x4k\x3\x2\x2\x2\x5m\x3\x2\x2\x2\ao\x3\x2\x2\x2"+
		"\tq\x3\x2\x2\x2\vs\x3\x2\x2\x2\rx\x3\x2\x2\x2\xF{\x3\x2\x2\x2\x11\x82"+
		"\x3\x2\x2\x2\x13\x86\x3\x2\x2\x2\x15\x91\x3\x2\x2\x2\x17\x9F\x3\x2\x2"+
		"\x2\x19\xA1\x3\x2\x2\x2\x1B\xA5\x3\x2\x2\x2\x1D\xB0\x3\x2\x2\x2\x1F\xBB"+
		"\x3\x2\x2\x2!\xBF\x3\x2\x2\x2#\xC4\x3\x2\x2\x2%\xC9\x3\x2\x2\x2\'\xCB"+
		"\x3\x2\x2\x2)\xD6\x3\x2\x2\x2+\xE5\x3\x2\x2\x2-\xEB\x3\x2\x2\x2/\xED\x3"+
		"\x2\x2\x2\x31\xF1\x3\x2\x2\x2\x33\xF3\x3\x2\x2\x2\x35\xF5\x3\x2\x2\x2"+
		"\x37\xF7\x3\x2\x2\x2\x39\xFB\x3\x2\x2\x2;\xFD\x3\x2\x2\x2=\xFF\x3\x2\x2"+
		"\x2?\x101\x3\x2\x2\x2\x41\x103\x3\x2\x2\x2\x43\x105\x3\x2\x2\x2\x45\x107"+
		"\x3\x2\x2\x2G\x109\x3\x2\x2\x2I\x10B\x3\x2\x2\x2K\x10E\x3\x2\x2\x2M\x113"+
		"\x3\x2\x2\x2O\x117\x3\x2\x2\x2Q\x11A\x3\x2\x2\x2S\x11F\x3\x2\x2\x2U\x126"+
		"\x3\x2\x2\x2W\x12B\x3\x2\x2\x2Y\x130\x3\x2\x2\x2[\x135\x3\x2\x2\x2]\x13C"+
		"\x3\x2\x2\x2_\x14B\x3\x2\x2\x2\x61\x155\x3\x2\x2\x2\x63\x160\x3\x2\x2"+
		"\x2\x65\x166\x3\x2\x2\x2g\x168\x3\x2\x2\x2i\x16B\x3\x2\x2\x2k\x16F\x3"+
		"\x2\x2\x2mn\t\x2\x2\x2n\x6\x3\x2\x2\x2op\t\x3\x2\x2p\b\x3\x2\x2\x2qr\t"+
		"\x4\x2\x2r\n\x3\x2\x2\x2st\a%\x2\x2t\f\x3\x2\x2\x2uy\t\x5\x2\x2vw\a\xF"+
		"\x2\x2wy\a\f\x2\x2xu\x3\x2\x2\x2xv\x3\x2\x2\x2y\xE\x3\x2\x2\x2z|\t\x6"+
		"\x2\x2{z\x3\x2\x2\x2|}\x3\x2\x2\x2}{\x3\x2\x2\x2}~\x3\x2\x2\x2~\x7F\x3"+
		"\x2\x2\x2\x7F\x80\b\a\x2\x2\x80\x10\x3\x2\x2\x2\x81\x83\x5\r\x6\x2\x82"+
		"\x81\x3\x2\x2\x2\x83\x84\x3\x2\x2\x2\x84\x82\x3\x2\x2\x2\x84\x85\x3\x2"+
		"\x2\x2\x85\x12\x3\x2\x2\x2\x86\x87\a\x31\x2\x2\x87\x88\a\x31\x2\x2\x88"+
		"\x8C\x3\x2\x2\x2\x89\x8B\n\x5\x2\x2\x8A\x89\x3\x2\x2\x2\x8B\x8E\x3\x2"+
		"\x2\x2\x8C\x8A\x3\x2\x2\x2\x8C\x8D\x3\x2\x2\x2\x8D\x8F\x3\x2\x2\x2\x8E"+
		"\x8C\x3\x2\x2\x2\x8F\x90\b\t\x3\x2\x90\x14\x3\x2\x2\x2\x91\x92\a\x31\x2"+
		"\x2\x92\x93\a,\x2\x2\x93\x97\x3\x2\x2\x2\x94\x96\v\x2\x2\x2\x95\x94\x3"+
		"\x2\x2\x2\x96\x99\x3\x2\x2\x2\x97\x98\x3\x2\x2\x2\x97\x95\x3\x2\x2\x2"+
		"\x98\x9A\x3\x2\x2\x2\x99\x97\x3\x2\x2\x2\x9A\x9B\a,\x2\x2\x9B\x9C\a\x31"+
		"\x2\x2\x9C\x9D\x3\x2\x2\x2\x9D\x9E\b\n\x3\x2\x9E\x16\x3\x2\x2\x2\x9F\xA0"+
		"\x5\v\x5\x2\xA0\x18\x3\x2\x2\x2\xA1\xA2\a}\x2\x2\xA2\xA3\x3\x2\x2\x2\xA3"+
		"\xA4\b\f\x4\x2\xA4\x1A\x3\x2\x2\x2\xA5\xA6\a\x42\x2\x2\xA6\xA7\ak\x2\x2"+
		"\xA7\xA8\ap\x2\x2\xA8\xA9\a\x65\x2\x2\xA9\xAA\an\x2\x2\xAA\xAB\aw\x2\x2"+
		"\xAB\xAC\a\x66\x2\x2\xAC\xAD\ag\x2\x2\xAD\xAE\x3\x2\x2\x2\xAE\xAF\b\r"+
		"\x4\x2\xAF\x1C\x3\x2\x2\x2\xB0\xB1\a\x42\x2\x2\xB1\xB2\ak\x2\x2\xB2\xB3"+
		"\ap\x2\x2\xB3\xB4\ak\x2\x2\xB4\xB5\av\x2\x2\xB5\xB6\x3\x2\x2\x2\xB6\xB7"+
		"\b\xE\x4\x2\xB7\x1E\x3\x2\x2\x2\xB8\xBC\n\a\x2\x2\xB9\xBA\a\x31\x2\x2"+
		"\xBA\xBC\n\b\x2\x2\xBB\xB8\x3\x2\x2\x2\xBB\xB9\x3\x2\x2\x2\xBC\xBD\x3"+
		"\x2\x2\x2\xBD\xBB\x3\x2\x2\x2\xBD\xBE\x3\x2\x2\x2\xBE \x3\x2\x2\x2\xBF"+
		"\xC0\x5\r\x6\x2\xC0\xC1\x6\x10\x2\x2\xC1\xC2\x3\x2\x2\x2\xC2\xC3\b\x10"+
		"\x5\x2\xC3\"\x3\x2\x2\x2\xC4\xC5\x5\r\x6\x2\xC5\xC6\x6\x11\x3\x2\xC6\xC7"+
		"\x3\x2\x2\x2\xC7\xC8\b\x11\x5\x2\xC8$\x3\x2\x2\x2\xC9\xCA\x5\r\x6\x2\xCA"+
		"&\x3\x2\x2\x2\xCB\xCC\a\x31\x2\x2\xCC\xCD\a\x31\x2\x2\xCD\xD1\x3\x2\x2"+
		"\x2\xCE\xD0\n\x5\x2\x2\xCF\xCE\x3\x2\x2\x2\xD0\xD3\x3\x2\x2\x2\xD1\xCF"+
		"\x3\x2\x2\x2\xD1\xD2\x3\x2\x2\x2\xD2\xD4\x3\x2\x2\x2\xD3\xD1\x3\x2\x2"+
		"\x2\xD4\xD5\b\x13\x3\x2\xD5(\x3\x2\x2\x2\xD6\xD7\a\x31\x2\x2\xD7\xD8\a"+
		",\x2\x2\xD8\xDC\x3\x2\x2\x2\xD9\xDB\v\x2\x2\x2\xDA\xD9\x3\x2\x2\x2\xDB"+
		"\xDE\x3\x2\x2\x2\xDC\xDD\x3\x2\x2\x2\xDC\xDA\x3\x2\x2\x2\xDD\xDF\x3\x2"+
		"\x2\x2\xDE\xDC\x3\x2\x2\x2\xDF\xE0\a,\x2\x2\xE0\xE1\a\x31\x2\x2\xE1\xE2"+
		"\x3\x2\x2\x2\xE2\xE3\b\x14\x3\x2\xE3*\x3\x2\x2\x2\xE4\xE6\t\x6\x2\x2\xE5"+
		"\xE4\x3\x2\x2\x2\xE6\xE7\x3\x2\x2\x2\xE7\xE5\x3\x2\x2\x2\xE7\xE8\x3\x2"+
		"\x2\x2\xE8\xE9\x3\x2\x2\x2\xE9\xEA\b\x15\x2\x2\xEA,\x3\x2\x2\x2\xEB\xEC"+
		"\a<\x2\x2\xEC.\x3\x2\x2\x2\xED\xEE\a]\x2\x2\xEE\xEF\x3\x2\x2\x2\xEF\xF0"+
		"\b\x17\x6\x2\xF0\x30\x3\x2\x2\x2\xF1\xF2\a*\x2\x2\xF2\x32\x3\x2\x2\x2"+
		"\xF3\xF4\a+\x2\x2\xF4\x34\x3\x2\x2\x2\xF5\xF6\a.\x2\x2\xF6\x36\x3\x2\x2"+
		"\x2\xF7\xF8\a\x7F\x2\x2\xF8\xF9\x3\x2\x2\x2\xF9\xFA\b\x1B\x5\x2\xFA\x38"+
		"\x3\x2\x2\x2\xFB\xFC\t\t\x2\x2\xFC:\x3\x2\x2\x2\xFD\xFE\t\n\x2\x2\xFE"+
		"<\x3\x2\x2\x2\xFF\x100\t\v\x2\x2\x100>\x3\x2\x2\x2\x101\x102\t\f\x2\x2"+
		"\x102@\x3\x2\x2\x2\x103\x104\t\r\x2\x2\x104\x42\x3\x2\x2\x2\x105\x106"+
		"\t\xE\x2\x2\x106\x44\x3\x2\x2\x2\x107\x108\t\xF\x2\x2\x108\x46\x3\x2\x2"+
		"\x2\x109\x10A\t\x10\x2\x2\x10AH\x3\x2\x2\x2\x10B\x10C\ak\x2\x2\x10C\x10D"+
		"\ah\x2\x2\x10DJ\x3\x2\x2\x2\x10E\x10F\ag\x2\x2\x10F\x110\an\x2\x2\x110"+
		"\x111\au\x2\x2\x111\x112\ag\x2\x2\x112L\x3\x2\x2\x2\x113\x114\ag\x2\x2"+
		"\x114\x115\ap\x2\x2\x115\x116\a\x66\x2\x2\x116N\x3\x2\x2\x2\x117\x118"+
		"\ai\x2\x2\x118\x119\aq\x2\x2\x119P\x3\x2\x2\x2\x11A\x11B\ao\x2\x2\x11B"+
		"\x11C\ag\x2\x2\x11C\x11D\ap\x2\x2\x11D\x11E\aw\x2\x2\x11ER\x3\x2\x2\x2"+
		"\x11F\x120\aq\x2\x2\x120\x121\ar\x2\x2\x121\x122\av\x2\x2\x122\x123\a"+
		"k\x2\x2\x123\x124\aq\x2\x2\x124\x125\ap\x2\x2\x125T\x3\x2\x2\x2\x126\x127"+
		"\ar\x2\x2\x127\x128\ak\x2\x2\x128\x129\a\x65\x2\x2\x129\x12A\am\x2\x2"+
		"\x12AV\x3\x2\x2\x2\x12B\x12C\av\x2\x2\x12C\x12D\aj\x2\x2\x12D\x12E\ak"+
		"\x2\x2\x12E\x12F\au\x2\x2\x12FX\x3\x2\x2\x2\x130\x131\x5\x39\x1C\x2\x131"+
		"\x132\x5;\x1D\x2\x132\x133\x5=\x1E\x2\x133\x134\x5?\x1F\x2\x134Z\x3\x2"+
		"\x2\x2\x135\x136\x5\x41 \x2\x136\x137\x5\x43!\x2\x137\x138\x5\x45\"\x2"+
		"\x138\x139\x5G#\x2\x139\x13A\x5?\x1F\x2\x13A\\\x3\x2\x2\x2\x13B\x13D\x5"+
		"\t\x4\x2\x13C\x13B\x3\x2\x2\x2\x13D\x13E\x3\x2\x2\x2\x13E\x13C\x3\x2\x2"+
		"\x2\x13E\x13F\x3\x2\x2\x2\x13F\x146\x3\x2\x2\x2\x140\x142\t\x11\x2\x2"+
		"\x141\x143\x5\t\x4\x2\x142\x141\x3\x2\x2\x2\x143\x144\x3\x2\x2\x2\x144"+
		"\x142\x3\x2\x2\x2\x144\x145\x3\x2\x2\x2\x145\x147\x3\x2\x2\x2\x146\x140"+
		"\x3\x2\x2\x2\x146\x147\x3\x2\x2\x2\x147^\x3\x2\x2\x2\x148\x14C\x5\x5\x2"+
		"\x2\x149\x14C\x5\a\x3\x2\x14A\x14C\a\x61\x2\x2\x14B\x148\x3\x2\x2\x2\x14B"+
		"\x149\x3\x2\x2\x2\x14B\x14A\x3\x2\x2\x2\x14C\x151\x3\x2\x2\x2\x14D\x152"+
		"\x5\x5\x2\x2\x14E\x152\x5\a\x3\x2\x14F\x152\a\x61\x2\x2\x150\x152\x5\t"+
		"\x4\x2\x151\x14D\x3\x2\x2\x2\x151\x14E\x3\x2\x2\x2\x151\x14F\x3\x2\x2"+
		"\x2\x151\x150\x3\x2\x2\x2\x152\x153\x3\x2\x2\x2\x153\x151\x3\x2\x2\x2"+
		"\x153\x154\x3\x2\x2\x2\x154`\x3\x2\x2\x2\x155\x156\a?\x2\x2\x156\x62\x3"+
		"\x2\x2\x2\x157\x158\a?\x2\x2\x158\x161\a?\x2\x2\x159\x15A\a#\x2\x2\x15A"+
		"\x161\a?\x2\x2\x15B\x161\t\x12\x2\x2\x15C\x15D\a@\x2\x2\x15D\x161\a?\x2"+
		"\x2\x15E\x15F\a>\x2\x2\x15F\x161\a?\x2\x2\x160\x157\x3\x2\x2\x2\x160\x159"+
		"\x3\x2\x2\x2\x160\x15B\x3\x2\x2\x2\x160\x15C\x3\x2\x2\x2\x160\x15E\x3"+
		"\x2\x2\x2\x161\x64\x3\x2\x2\x2\x162\x167\a,\x2\x2\x163\x164\a\x31\x2\x2"+
		"\x164\x165\x6\x32\x4\x2\x165\x167\x6\x32\x5\x2\x166\x162\x3\x2\x2\x2\x166"+
		"\x163\x3\x2\x2\x2\x167\x66\x3\x2\x2\x2\x168\x169\t\x13\x2\x2\x169h\x3"+
		"\x2\x2\x2\x16A\x16C\n\x14\x2\x2\x16B\x16A\x3\x2\x2\x2\x16C\x16D\x3\x2"+
		"\x2\x2\x16D\x16B\x3\x2\x2\x2\x16D\x16E\x3\x2\x2\x2\x16Ej\x3\x2\x2\x2\x16F"+
		"\x170\a_\x2\x2\x170\x171\x3\x2\x2\x2\x171\x172\b\x35\x5\x2\x172l\x3\x2"+
		"\x2\x2\x18\x2\x3\x4x}\x84\x8C\x97\xBB\xBD\xD1\xDC\xE7\x13E\x144\x146\x14B"+
		"\x151\x153\x160\x166\x16D\a\b\x2\x2\x2\x3\x2\a\x3\x2\x6\x2\x2\a\x4\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace MurMur.Grammar
